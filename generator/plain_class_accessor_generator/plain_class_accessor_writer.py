from generator.plain_class_accessor_generator.plain_map_accessor_writer import PlainMapAccessorWriter
from generator.plain_class_accessor_generator.plain_list_accessor_writer import PlainListAccessorWriter
from generator.plain_class_accessor_generator.plain_list_map_accessor_writer import PlainListMapAccessorWriter

class PlainClassAccessorWriter(object):
	def __init__(self, file_name, table_desc_array):
		self.file_name = file_name
		self.table_desc_array = table_desc_array

	def write(self):
		with open(self.file_name, 'w') as f:
			self.write_class_head(f)
			self.write_class_body(f)
			f.flush()
	
	def write_class_head(self, f):
		f.write('#This file is generated by program. DO NOT EDIT IT MANUALLY!\n')
		self.write_import_declaration(f)
		f.write('class PlainClassAccessor(object):\n')
	
	def write_import_declaration(self, f):
		f.write('from redis_client.redis_accessor import RedisAccessor\n')
		f.write('from redis_client.redis_table import RedisTable\n')
		for table_desc in self.table_desc_array:
			table_type = table_desc['table_type']
			if table_type == 'map':
				plain_map_accessor_writer = PlainMapAccessorWriter(table_desc, f)
				plain_map_accessor_writer.write_import_declaration()
			elif table_type == 'list':
				plain_list_accessor_writer = PlainListAccessorWriter(table_desc, f)
				plain_list_accessor_writer.write_import_declaration()
			elif table_type == 'list_map':
				plain_list_map_accessor_writer = PlainListMapAccessorWriter(table_desc, f)
				plain_list_map_accessor_writer.write_import_declaration()
		f.write('\n')
					
	def write_class_body(self, f):
		self.write_init_function(f)
		for table_desc in self.table_desc_array:
			table_type = table_desc['table_type']
			if table_type == 'map':
				plain_map_accessor_writer = PlainMapAccessorWriter(table_desc, f)
				plain_map_accessor_writer.write()
			elif table_type == 'list':
				plain_list_accessor_writer = PlainListAccessorWriter(table_desc, f)
				plain_list_accessor_writer.write()
			elif table_type == 'list_map':
				plain_list_map_accessor_writer = PlainListMapAccessorWriter(table_desc, f)
				plain_list_map_accessor_writer.write()

	def write_init_function(self, f):
		f.write('\tdef __init__(self):\n')
		f.write('\t\tself.redis_accessor = RedisAccessor()\n')
		f.write('\t\tself.redis_table = RedisTable()\n\n')
